{"version":3,"sources":["components/MonacoEditor.js","components/MobileTopAppBar.js","components/TopAppBar.js","components/BottomAppBar.js","components/GlobalStyles.js","components/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["reqData","getData","setData","id","a","axios","post","custom_url_code","catch","err","window","location","href","res","console","log","status","data","isUrl","MEditor","props","curTheme","readOnly","language","setReadOnly","setUrl","useParams","editor","style","overflow","theme","height","value","colorDecorators","options","onChange","event","useStyles","makeStyles","root","position","bottom","spacing","right","minHeight","centerItems","justifyContent","urlEdit","marginLeft","paddingBottom","BootstrapInput","withStyles","marginTop","input","borderRadius","backgroundColor","palette","background","paper","border","fontSize","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","ScrollTop","children","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","useState","icon","setIcon","url","invokeSave","Fragment","CssBaseline","AppBar","color","Toolbar","Typography","variant","FormControl","InputLabel","htmlFor","Input","disabled","type","e","width","endAdornment","InputAdornment","IconButton","navigator","clipboard","writeText","display","margin","Select","labelId","MenuItem","alignItems","Button","toggle","Fab","size","formControl","minWidth","selectEmpty","setLanguage","Tooltip","title","edge","appBar","top","toolbar","BottomAppBar","GlobalStyles","createGlobalStyle","body","text","lightTheme","toggleBorder","darkTheme","get_and_set_systemid","system_id","localStorage","getItem","get","setItem","post_save","s","encodeURI","split","length","byteCount","alert","shortUrl","App","localTheme","setTheme","themeToggler","handleKeyDown","charCode","String","fromCharCode","which","toLowerCase","ctrlKey","preventDefault","metaKey","onKeyDown","basename","process","maxWidth","readOnlyToggle","isEditing","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f1828b0.chunk.js","sourcesContent":["import Editor, { DiffEditor } from \"@monaco-editor/react\";\nimport { useParams } from \"react-router-dom\";\n// import { useState } from \"react\";\nimport axios from \"axios\";\n\nlet reqData = {};\nconst getData = async (setData, id) => {\n  // setLoading(true);\n  const res = await axios\n    .post(\"https://apiv1.stagbin.tk/paste/get\", {\n      custom_url_code: id,\n    })\n    .catch((err) => {\n      // alert(\"invalid url\");\n      window.location.href = \"https://old.stagbin.tk\";\n    });\n  console.log(res);\n  if (res.status === 200) {\n    reqData = res.data;\n    console.log(reqData);\n    setData(reqData.data);\n    // setLoading(false);\n  }\n  if (reqData.isUrl) {\n    window.location.href = reqData.data;\n  }\n};\n\nexport default function MEditor(props) {\n  const curTheme = props.curTheme;\n  const readOnly = props.readOnly;\n  const language = props.language;\n  const setReadOnly = props.setReadOnly;\n  const setUrl = props.setUrl;\n  const isDiff = false;\n  const [data, setData] = [props.data, props.setData];\n  // const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  if (id) {\n    setReadOnly(true);\n    setUrl(id);\n    getData(setData, id);\n  }\n  // if (data) {\n  //   document.getElementById(\"m-placeholder\").style.display = \"none\";\n  // }\n  const diffEditor = (\n    <DiffEditor\n      height=\"90vh\"\n      defaultLanguage={language}\n      original=\"\"\n      modified={id}\n    />\n  );\n\n  const editor = (\n    <div\n      style={{\n        overflow: \"hidden\",\n      }}\n    >\n      <Editor\n        theme={curTheme === \"light\" ? \"light\" : \"vs-dark\"}\n        height=\"88vh\"\n        language={language}\n        value={data}\n        colorDecorators=\"true\"\n        options={{\n          readOnly: readOnly,\n        }}\n        onChange={(value, event) => {\n          setData(value);\n        }}\n      />\n    </div>\n  );\n  console.log(language);\n  return isDiff ? diffEditor : editor;\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { Button } from \"@material-ui/core\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(2),\n    minHeight: \"10px\",\n  },\n  centerItems: {\n    justifyContent: \"space-between\",\n  },\n  urlEdit: {\n    justifyContent: \"center\",\n    marginLeft: \"500px\",\n    paddingBottom: \"15px\",\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nexport default function BackToTop(props) {\n  const curTheme = props.curTheme;\n  // const isEditing = props.isEditing;\n  // 0 = white, 1 = dark\n  const [icon, setIcon] = useState(curTheme === \"dark\");\n  const [url, setUrl] = [props.url, props.setUrl];\n  const readOnly = props.readOnly;\n  const invokeSave = props.invokeSave;\n\n  const classes = useStyles();\n  console.log(readOnly);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar style={{ background: \"inherit\", color: \"inherit\" }}>\n        <Toolbar className={classes.centerItems}>\n          <Typography variant=\"h6\">StagBIN</Typography>\n          <FormControl\n            style={{\n              marginLeft: \"30px\",\n              marginTop: \"0\",\n            }}\n          >\n            <InputLabel htmlFor=\"custom-url\">URL</InputLabel>\n            <Input\n              id=\"custom-url\"\n              disabled={readOnly ? true : false}\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setUrl(e.target.value);\n              }}\n              style={{ color: \"inherit\", width: \"50%\" }}\n              endAdornment={\n                readOnly ? (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"cop\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          \"https://stagbin.tk/\" + url\n                        );\n                      }}\n                    >\n                      <FileCopyIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </FormControl>\n          <div style={{ display: \"inline-flex\" }}>\n            <FormControl className={classes.margin}>\n              <InputLabel id=\"demo-customized-select-label\">Option</InputLabel>\n              <Select\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                // value={}\n                onChange={(event) => {\n                  switch (event.target.value) {\n                    case \"save\":\n                      invokeSave();\n                      break;\n                    case \"new\":\n                      window.location.href = \"https://stagbin.tk\";\n                      break;\n                    case \"edit\":\n                      break;\n                    default:\n                      break;\n                  }\n                }}\n                input={<BootstrapInput />}\n              >\n                {readOnly ? (\n                  <MenuItem value=\"edit\">\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <EditIcon />\n                      <div>Edit</div>\n                    </div>\n                  </MenuItem>\n                ) : (\n                  <MenuItem value=\"save\">\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <SaveIcon />\n                      <div>Save</div>\n                    </div>\n                  </MenuItem>\n                )}\n                <MenuItem value=\"new\">\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <AddIcon />\n                    <div>New</div>\n                  </div>\n                </MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                props.toggle();\n                setIcon(!icon);\n              }}\n            >\n              {icon ? <WbSunnyIcon /> : <NightsStayIcon />}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { Button } from \"@material-ui/core\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(2),\n    minHeight: \"10px\",\n  },\n  centerItems: {\n    justifyContent: \"space-between\",\n  },\n  urlEdit: {\n    justifyContent: \"center\",\n    marginLeft: \"500px\",\n    paddingBottom: \"15px\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    marginTop: \"-5px\",\n    color: \"inherit\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nexport default function BackToTop(props) {\n  const curTheme = props.curTheme;\n  // const isEditing = props.isEditing;\n  // 0 = white, 1 = dark\n  const [icon, setIcon] = useState(curTheme === \"dark\");\n  const [url, setUrl] = [props.url, props.setUrl];\n  const readOnly = props.readOnly;\n  console.log(readOnly);\n  const classes = useStyles();\n  const invokeSave = props.invokeSave;\n  const setLanguage = props.setLanguage;\n  // const setReadOnly = props.setReadOnly;\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar style={{ background: \"inherit\", color: \"inherit\" }}>\n        <Toolbar className={classes.centerItems}>\n          <Typography variant=\"h6\">StagBIN</Typography>\n          <FormControl>\n            <InputLabel style={{ color: \"inherit\" }} htmlFor=\"custom-url\">\n              URL\n            </InputLabel>\n            <Input\n              id=\"custom-url\"\n              type=\"text\"\n              disabled={readOnly ? true : false}\n              value={url}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setUrl(e.target.value);\n              }}\n              style={{ color: \"inherit\" }}\n              endAdornment={\n                readOnly ? (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"cop\"\n                      color=\"inherit\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          \"https://stagbin.tk/\" + url\n                        );\n                      }}\n                    >\n                      <FileCopyIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </FormControl>\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel\n                style={{ color: \"inherit\" }}\n                id=\"demo-simple-select-label\"\n              >\n                Language\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                style={{ color: \"inherit\" }}\n                // value={}\n                onChange={(event) => {\n                  setLanguage(event.target.value);\n                }}\n              >\n                <MenuItem style={{ color: \"inherit\" }} value=\"javascript\">\n                  Javascript\n                </MenuItem>\n                <MenuItem value=\"python\">Python</MenuItem>\n                <MenuItem value=\"go\">Go Lang</MenuItem>\n                <MenuItem value=\"html\">HTML</MenuItem>\n                <MenuItem value=\"css\">CSS</MenuItem>\n                <MenuItem value=\"cpp\">C/C++</MenuItem>\n                <MenuItem value=\"java\">Java</MenuItem>\n              </Select>\n            </FormControl>\n            {readOnly ? (\n              <Tooltip title=\"Edit\">\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"Save\">\n                <IconButton\n                  edge=\"end\"\n                  color=\"inherit\"\n                  aria-label=\"Save\"\n                  onClick={invokeSave}\n                >\n                  <SaveIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title=\"New Paste\">\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"Save\"\n                onClick={() => {\n                  window.location.href = \"https://stagbin.tk\";\n                }}\n              >\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                props.toggle();\n                setIcon(!icon);\n              }}\n            >\n              {icon ? <WbSunnyIcon /> : <NightsStayIcon />}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    bottom: 0,\n    top: \"auto\",\n  },\n  toolbar: {\n    minHeight: \"30px\",\n  },\n}));\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        style={{ background: \"inherit\", color: \"inherit\" }}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <a href=\"https://stagbin.tk\" style={{ color: \"inherit\" }}>\n            <small>&copy; Copyright 2021, vjspranav</small>\n          </a>\n          <div style={{ margin: \"8px\" }}>\n            <a\n              href=\"https://github.com/vjspranav/Stagbin\"\n              style={{ color: \"inherit\" }}\n            >\n              <h4 style={{ margin: 0 }}>Source</h4>\n            </a>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.1s linear;\n  }\n  `;\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n};\n\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import MyEditor from \"./components/MyEditor\";\n// import TopBar from \"./components/Topbar\";\n// import BottomBar from \"./components/BottomBar\";\nimport MEditor from \"./components/MonacoEditor\";\nimport MobileTopAppBar from \"./components/MobileTopAppBar\";\nimport TopAppBar from \"./components/TopAppBar\";\nimport BottomAppBar from \"./components/BottomAppBar\";\n\n// For Theme\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\n\nimport MediaQuery from \"react-responsive\";\nimport axios from \"axios\";\n\nconst get_and_set_systemid = async () => {\n  let system_id = localStorage.getItem(\"stagbin_system_id\");\n  if (!system_id) {\n    let res = await axios.get(\"https://apiv1.stagbin.tk/paste/newSystemID\");\n    system_id = res.data.system_id;\n    localStorage.setItem(\"stagbin_system_id\", system_id);\n  }\n  return system_id;\n};\n\nconst post_save = async (data, custom_url_code, system_id) => {\n  function byteCount(s) {\n    return encodeURI(s).split(/%..|./).length - 1;\n  }\n  const size = byteCount(data) / (1024 * 1024);\n  if (size > 5) {\n    alert(\"Cannot save data larger than 5mb\");\n    return;\n  }\n  const res = await axios.post(\"https://apiv1.stagbin.tk/paste/new\", {\n    data,\n    system_id,\n    custom_url_code,\n  });\n  if (res.status === 200) {\n    navigator.clipboard.writeText(res.data.shortUrl);\n    alert(\"Url copied to clipboard\");\n    window.location.href = res.data.shortUrl;\n  } else {\n    console.log(res.status);\n    console.log(res.data);\n  }\n};\n\nfunction App() {\n  let localTheme = localStorage.getItem(\"stagbin_theme\");\n  // const history = useHistory();\n\n  // console.log(history);\n\n  const [theme, setTheme] = useState(localTheme ? localTheme : \"light\");\n  const [readOnly, setReadOnly] = useState(false);\n  const [language, setLanguage] = useState(\"python\");\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState(\n    \"//Enter text and press ctrl + s to save, this also acts as a url shortner if you paste a http(s) url instead\"\n  );\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n    localStorage.setItem(\"stagbin_theme\", theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const handleKeyDown = async (event) => {\n    let charCode = String.fromCharCode(event.which).toLowerCase();\n    if (event.ctrlKey && charCode === \"s\") {\n      event.preventDefault();\n      invokeSave();\n    }\n\n    // For Mac\n    if (event.metaKey && charCode === \"s\") {\n      event.preventDefault();\n      console.log(\"Cmd + S pressed\");\n      invokeSave();\n    }\n  };\n\n  const invokeSave = async () => {\n    const system_id = await get_and_set_systemid();\n    post_save(data, url, system_id);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div onKeyDown={handleKeyDown} className=\"App\" style={{}}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <MediaQuery maxWidth={480}>\n                <MobileTopAppBar\n                  toggle={themeToggler}\n                  readOnlyToggle={setReadOnly}\n                  readOnly={readOnly}\n                  curTheme={theme}\n                  isEditing={true}\n                  url={url}\n                  setUrl={setUrl}\n                  invokeSave={invokeSave}\n                />\n              </MediaQuery>\n              <MediaQuery minWidth={480}>\n                <TopAppBar\n                  toggle={themeToggler}\n                  readOnly={readOnly}\n                  readOnlyToggle={setReadOnly}\n                  curTheme={theme}\n                  isEditing={true}\n                  url={url}\n                  setUrl={setUrl}\n                  invokeSave={invokeSave}\n                  setLanguage={setLanguage}\n                />\n              </MediaQuery>\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <MEditor\n                  curTheme={theme}\n                  readOnly={readOnly}\n                  setReadOnly={setReadOnly}\n                  url={url}\n                  setUrl={setUrl}\n                  data={data}\n                  setData={setData}\n                  invokeSave={invokeSave}\n                  language={language}\n                />\n              </Route>\n              <Route path=\"/:id\">\n                <MEditor\n                  curTheme={theme}\n                  readOnly={readOnly}\n                  setReadOnly={setReadOnly}\n                  url={url}\n                  setUrl={setUrl}\n                  data={data}\n                  setData={setData}\n                  language={language}\n                />\n              </Route>\n            </Switch>\n            <div>\n              <BottomAppBar curTheme={theme} />\n            </div>\n          </Router>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}