{"version":3,"sources":["components/MonacoEditor.js","components/TopAppBar.js","components/BottomAppBar.js","components/GlobalStyles.js","components/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["MEditor","props","curTheme","id","useParams","diffEditor","height","defaultLanguage","original","modified","editor","style","overflow","theme","defaultValue","colorDecorators","automaticLayout","console","log","useStyles","makeStyles","root","position","bottom","spacing","right","minHeight","centerItems","justifyContent","urlEdit","marginLeft","paddingBottom","ScrollTop","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","isEditing","useState","icon","setIcon","url","setUrl","Fragment","CssBaseline","AppBar","background","color","Toolbar","Typography","variant","FormControl","InputLabel","htmlFor","Input","type","value","onChange","e","endAdornment","InputAdornment","IconButton","Tooltip","title","edge","Button","toggle","Fab","size","appBar","top","toolbar","BottomAppBar","to","GlobalStyles","createGlobalStyle","body","text","lightTheme","toggleBorder","darkTheme","App","localTheme","localStorage","getItem","setTheme","onKeyDown","charCode","String","fromCharCode","which","toLowerCase","ctrlKey","preventDefault","metaKey","basename","process","setItem","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b60c08dc.chunk.js","sourcesContent":["import Editor, { DiffEditor } from \"@monaco-editor/react\";\nimport { useParams } from \"react-router-dom\";\nexport default function MEditor(props) {\n  const curTheme = props.curTheme;\n  const { id } = useParams();\n\n  const diffEditor = (\n    <DiffEditor\n      height=\"90vh\"\n      defaultLanguage=\"javascript\"\n      original=\"\"\n      modified={id}\n    />\n  );\n\n  const editor = (\n    <div\n      style={{\n        overflow: \"hidden\",\n      }}\n    >\n      <Editor\n        theme={curTheme === \"light\" ? \"light\" : \"vs-dark\"}\n        height=\"88vh\"\n        defaultLanguage=\"javascript\"\n        defaultValue={id ? \"content from \" + id : \"//Enter text\"}\n        colorDecorators=\"true\"\n        automaticLayout=\"true\"\n      />\n    </div>\n  );\n  console.log(id);\n\n  return id ? diffEditor : editor;\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { Button } from \"@material-ui/core\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(2),\n    minHeight: \"10px\",\n  },\n  centerItems: {\n    justifyContent: \"space-between\",\n  },\n  urlEdit: {\n    justifyContent: \"center\",\n    marginLeft: \"500px\",\n    paddingBottom: \"15px\",\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nexport default function BackToTop(props) {\n  const curTheme = props.curTheme;\n  const isEditing = props.isEditing;\n  // 0 = white, 1 = dark\n  const [icon, setIcon] = useState(curTheme === \"dark\");\n  const [url, setUrl] = useState(\"\");\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar style={{ background: \"inherit\", color: \"inherit\" }}>\n        <Toolbar className={classes.centerItems}>\n          <Typography variant=\"h6\">StagBIN</Typography>\n          <FormControl>\n            <InputLabel htmlFor=\"custom-url\">URL</InputLabel>\n            <Input\n              id=\"custom-url\"\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setUrl(e.target.value);\n              }}\n              style={{ color: \"inherit\" }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"cop\"\n                    // onClick={handleClickShowPassword}\n                    // onMouseDown={handleMouseDownPassword}\n                  ></IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <div>\n            {isEditing ? (\n              <Tooltip title=\"Save\">\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                  <SaveIcon />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"Edit\">\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title=\"New Paste\">\n              <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                props.toggle();\n                setIcon(!icon);\n              }}\n            >\n              {icon ? <WbSunnyIcon /> : <NightsStayIcon />}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    bottom: 0,\n    top: \"auto\",\n  },\n  toolbar: {\n    minHeight: \"30px\",\n  },\n}));\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        style={{ background: \"inherit\", color: \"inherit\" }}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Link to=\"/\" className=\"navbar-brand\" style={{ color: \"inherit\" }}>\n            <small>&copy; Copyright 2021, vjspranav</small>\n          </Link>{\" \"}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n  `;\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n};\n\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import MyEditor from \"./components/MyEditor\";\n// import TopBar from \"./components/Topbar\";\n// import BottomBar from \"./components/BottomBar\";\nimport MEditor from \"./components/MonacoEditor\";\nimport TopAppBar from \"./components/TopAppBar\";\nimport BottomAppBar from \"./components/BottomAppBar\";\n\n// For Theme\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\n\nfunction App() {\n  let localTheme = localStorage.getItem(\"theme\");\n  const [theme, setTheme] = useState(localTheme ? localTheme : \"light\");\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n    localStorage.setItem(\"theme\", theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const handleKeyDown = (event) => {\n    let charCode = String.fromCharCode(event.which).toLowerCase();\n    if (event.ctrlKey && charCode === \"s\") {\n      event.preventDefault();\n      console.log(\"Ctrl + S pressed\");\n    }\n\n    // For Mac\n    if (event.metaKey && charCode === \"s\") {\n      event.preventDefault();\n      console.log(\"Cmd + S pressed\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div onKeyDown={handleKeyDown} className=\"App\" style={{}}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <TopAppBar\n                toggle={themeToggler}\n                curTheme={theme}\n                isEditing={true}\n              />\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <MEditor curTheme={theme} />\n              </Route>\n              <Route path=\"/:id\">\n                <MEditor curTheme={theme} />\n              </Route>\n            </Switch>\n            <div>\n              <BottomAppBar curTheme={theme} />\n            </div>\n          </Router>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}