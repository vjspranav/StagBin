{"version":3,"sources":["components/MonacoEditor.js","components/MobileTopAppBar.js","components/TopAppBar.js","components/BottomAppBar.js","components/GlobalStyles.js","components/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["MEditor","props","curTheme","readOnly","setReadOnly","data","setData","id","useParams","style","overflow","theme","height","defaultLanguage","defaultValue","colorDecorators","options","onChange","value","event","console","log","useStyles","makeStyles","root","position","bottom","spacing","right","minHeight","centerItems","justifyContent","urlEdit","marginLeft","paddingBottom","BootstrapInput","withStyles","marginTop","input","borderRadius","backgroundColor","palette","background","paper","border","fontSize","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","ScrollTop","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","isEditing","useState","icon","setIcon","url","setUrl","Fragment","CssBaseline","AppBar","color","Toolbar","Typography","variant","FormControl","InputLabel","htmlFor","Input","type","e","width","endAdornment","InputAdornment","IconButton","display","margin","Select","labelId","MenuItem","alignItems","Button","toggle","Fab","size","Tooltip","title","edge","appBar","top","toolbar","BottomAppBar","to","GlobalStyles","createGlobalStyle","body","text","lightTheme","toggleBorder","darkTheme","get_and_set_systemid","a","system_id","localStorage","getItem","axios","get","res","setItem","post_save","custom_url_code","status","App","localTheme","setTheme","themeToggler","handleKeyDown","charCode","String","fromCharCode","which","toLowerCase","ctrlKey","preventDefault","metaKey","onKeyDown","basename","process","maxWidth","readOnlyToggle","minWidth","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.831371c8.chunk.js","sourcesContent":["import Editor, { DiffEditor } from \"@monaco-editor/react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function MEditor(props) {\n  const curTheme = props.curTheme;\n  const readOnly = props.readOnly;\n  const setReadOnly = props.setReadOnly;\n  const isDiff = false;\n  const [data, setData] = [props.data, props.setData];\n  const { id } = useParams();\n  if (id) {\n    setReadOnly(true);\n  }\n  // if (data) {\n  //   document.getElementById(\"m-placeholder\").style.display = \"none\";\n  // }\n  const diffEditor = (\n    <DiffEditor\n      height=\"90vh\"\n      defaultLanguage=\"javascript\"\n      original=\"\"\n      modified={id}\n    />\n  );\n\n  const editor = (\n    <div\n      style={{\n        overflow: \"hidden\",\n      }}\n    >\n      <Editor\n        theme={curTheme === \"light\" ? \"light\" : \"vs-dark\"}\n        height=\"88vh\"\n        defaultLanguage=\"javascript\"\n        defaultValue={data}\n        colorDecorators=\"true\"\n        options={{\n          readOnly: readOnly,\n        }}\n        onChange={(value, event) => {\n          setData(value);\n          console.log(data);\n        }}\n      />\n    </div>\n  );\n\n  return isDiff ? diffEditor : editor;\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { Button } from \"@material-ui/core\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(2),\n    minHeight: \"10px\",\n  },\n  centerItems: {\n    justifyContent: \"space-between\",\n  },\n  urlEdit: {\n    justifyContent: \"center\",\n    marginLeft: \"500px\",\n    paddingBottom: \"15px\",\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nexport default function BackToTop(props) {\n  const curTheme = props.curTheme;\n  const isEditing = props.isEditing;\n  // 0 = white, 1 = dark\n  const [icon, setIcon] = useState(curTheme === \"dark\");\n  const [url, setUrl] = [props.url, props.setUrl];\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar style={{ background: \"inherit\", color: \"inherit\" }}>\n        <Toolbar className={classes.centerItems}>\n          <Typography variant=\"h6\">StagBIN</Typography>\n          <FormControl\n            style={{\n              marginLeft: \"30px\",\n              marginTop: \"0\",\n            }}\n          >\n            <InputLabel htmlFor=\"custom-url\">URL</InputLabel>\n            <Input\n              id=\"custom-url\"\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setUrl(e.target.value);\n              }}\n              style={{ color: \"inherit\", width: \"50%\" }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"cop\"\n                    // onClick={handleClickShowPassword}\n                    // onMouseDown={handleMouseDownPassword}\n                  ></IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <div style={{ display: \"inline-flex\" }}>\n            <FormControl className={classes.margin}>\n              <InputLabel id=\"demo-customized-select-label\">Option</InputLabel>\n              <Select\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                // value={}\n                // onChange={}\n                input={<BootstrapInput />}\n              >\n                <MenuItem>\n                  {isEditing ? (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <SaveIcon />\n                      <div>Save</div>\n                    </div>\n                  ) : (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <EditIcon />\n                      <div>Edit</div>\n                    </div>\n                  )}\n                </MenuItem>\n                <MenuItem>\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <AddIcon />\n                    <div>New</div>\n                  </div>\n                </MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                props.toggle();\n                setIcon(!icon);\n              }}\n            >\n              {icon ? <WbSunnyIcon /> : <NightsStayIcon />}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { Button } from \"@material-ui/core\";\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(2),\n    minHeight: \"10px\",\n  },\n  centerItems: {\n    justifyContent: \"space-between\",\n  },\n  urlEdit: {\n    justifyContent: \"center\",\n    marginLeft: \"500px\",\n    paddingBottom: \"15px\",\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nexport default function BackToTop(props) {\n  const curTheme = props.curTheme;\n  const isEditing = props.isEditing;\n  // 0 = white, 1 = dark\n  const [icon, setIcon] = useState(curTheme === \"dark\");\n  const [url, setUrl] = [props.url, props.setUrl];\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar style={{ background: \"inherit\", color: \"inherit\" }}>\n        <Toolbar className={classes.centerItems}>\n          <Typography variant=\"h6\">StagBIN</Typography>\n          <FormControl>\n            <InputLabel htmlFor=\"custom-url\">URL</InputLabel>\n            <Input\n              id=\"custom-url\"\n              type=\"text\"\n              value={url}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setUrl(e.target.value);\n              }}\n              style={{ color: \"inherit\" }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"cop\"\n                    // onClick={handleClickShowPassword}\n                    // onMouseDown={handleMouseDownPassword}\n                  ></IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <div>\n            {isEditing ? (\n              <Tooltip title=\"Save\">\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                  <SaveIcon />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <Tooltip title=\"Edit\">\n                <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title=\"New Paste\">\n              <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Save\">\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                props.toggle();\n                setIcon(!icon);\n              }}\n            >\n              {icon ? <WbSunnyIcon /> : <NightsStayIcon />}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    bottom: 0,\n    top: \"auto\",\n  },\n  toolbar: {\n    minHeight: \"30px\",\n  },\n}));\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        style={{ background: \"inherit\", color: \"inherit\" }}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Link to=\"/\" className=\"navbar-brand\" style={{ color: \"inherit\" }}>\n            <small>&copy; Copyright 2021, vjspranav</small>\n          </Link>{\" \"}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n  `;\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n};\n\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import MyEditor from \"./components/MyEditor\";\n// import TopBar from \"./components/Topbar\";\n// import BottomBar from \"./components/BottomBar\";\nimport MEditor from \"./components/MonacoEditor\";\nimport MobileTopAppBar from \"./components/MobileTopAppBar\";\nimport TopAppBar from \"./components/TopAppBar\";\nimport BottomAppBar from \"./components/BottomAppBar\";\n\n// For Theme\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\n\nimport MediaQuery from \"react-responsive\";\nimport axios from \"axios\";\n\nconst get_and_set_systemid = async () => {\n  let system_id = localStorage.getItem(\"stagbin_system_id\");\n  if (!system_id) {\n    let res = await axios.get(\"https://api.stagbin.tk/paste/newSystemID\");\n    system_id = res.data.system_id;\n    localStorage.setItem(\"stagbin_system_id\", system_id);\n  }\n  return system_id;\n};\n\nconst post_save = async (data, custom_url_code, system_id) => {\n  const res = await axios.get(\"https://api.stagbin.tk/paste/new\", {\n    data,\n    system_id,\n    custom_url_code,\n  });\n  if (res.status === 200) {\n    console.log(res.data);\n  } else {\n    console.log(res.status);\n    console.log(res.data);\n  }\n};\n\nfunction App() {\n  let localTheme = localStorage.getItem(\"stagbin_theme\");\n  const [theme, setTheme] = useState(localTheme ? localTheme : \"light\");\n  const [readOnly, setReadOnly] = useState(\"false\");\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState(\n    \"//Enter text and press ctrl + s to save, this also acts as a url shortner if you paste a http(s) url instead\"\n  );\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n    localStorage.setItem(\"stagbin_theme\", theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const handleKeyDown = async (event) => {\n    let charCode = String.fromCharCode(event.which).toLowerCase();\n    const system_id = await get_and_set_systemid();\n    if (event.ctrlKey && charCode === \"s\") {\n      event.preventDefault();\n      post_save(data, url, system_id);\n    }\n\n    // For Mac\n    if (event.metaKey && charCode === \"s\") {\n      event.preventDefault();\n      console.log(\"Cmd + S pressed\");\n      post_save(data, url, system_id);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div onKeyDown={handleKeyDown} className=\"App\" style={{}}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <MediaQuery maxWidth={480}>\n                <MobileTopAppBar\n                  toggle={themeToggler}\n                  readOnlyToggle={setReadOnly}\n                  readOnly={readOnly}\n                  curTheme={theme}\n                  isEditing={true}\n                  url={url}\n                  setUrl={setUrl}\n                />\n              </MediaQuery>\n              <MediaQuery minWidth={480}>\n                <TopAppBar\n                  toggle={themeToggler}\n                  readOnly={readOnly}\n                  readOnlyToggle={setReadOnly}\n                  curTheme={theme}\n                  isEditing={true}\n                  url={url}\n                  setUrl={setUrl}\n                />\n              </MediaQuery>\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <MEditor\n                  curTheme={theme}\n                  readOnly={readOnly}\n                  setReadOnly={setReadOnly}\n                  url={url}\n                  data={data}\n                  setData={setData}\n                />\n              </Route>\n              <Route path=\"/:id\">\n                <MEditor\n                  curTheme={theme}\n                  readOnly={readOnly}\n                  setReadOnly={setReadOnly}\n                  url={url}\n                  data={data}\n                  setData={setData}\n                />\n              </Route>\n            </Switch>\n            <div>\n              <BottomAppBar curTheme={theme} />\n            </div>\n          </Router>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}