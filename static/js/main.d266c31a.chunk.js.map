{"version":3,"sources":["components/MyEditor.js","components/Topbar.js","components/BottomBar.js","components/GlobalStyles.js","components/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["MyEditor","id","useParams","useState","convertedText","setConvertedText","theme","value","onChange","ThemeSwitch","withStyles","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","TopBar","curTheme","className","to","toggle","name","BottomBar","GlobalStyles","createGlobalStyle","body","text","lightTheme","toggleBorder","background","darkTheme","App","setTheme","style","paddingTop","paddingBottom","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d266c31a.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst MyEditor = () => {\n  const { id } = useParams();\n  const [convertedText, setConvertedText] = useState(id);\n  return (\n    <div>\n      <ReactQuill\n        theme=\"snow\"\n        value={convertedText || \"\"}\n        onChange={setConvertedText}\n      />\n    </div>\n  );\n};\n\nexport default MyEditor;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ThemeSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function TopBar(props) {\n  const curTheme = props.curTheme;\n  return (\n    <div>\n      <nav\n        className={\n          \"navbar navbar-expand-lg fixed-top \" +\n          (curTheme === \"light\"\n            ? \"navbar-light bg-light\"\n            : \"navbar-dark bg-dark\")\n        }\n      >\n        <Link to=\"/\" className=\"navbar-brand\">\n          vjsbin\n        </Link>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                About\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"navbar-item\">\n              <label>\n                {curTheme === \"light\" ? \"Light Theme\" : \"Dark Theme\"}\n              </label>\n              <ThemeSwitch\n                onChange={() => {\n                  props.toggle();\n                }}\n                name=\"Dark\"\n              />\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function BottomBar(props) {\n  const curTheme = props.curTheme;\n  return (\n    <div>\n      <nav\n        className={\n          \"navbar navbar-expand-lg fixed-bottom \" +\n          (curTheme === \"light\"\n            ? \"navbar-light bg-light\"\n            : \"navbar-dark bg-dark\")\n        }\n      >\n        <Link to=\"/\" className=\"navbar-brand\">\n          {\" \"}\n          <small>&copy; Copyright 2021, vjspranav</small>{\" \"}\n        </Link>\n      </nav>\n    </div>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n  `;\n","export const lightTheme = {\n  body: \"#FFF\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  background: \"#363537\",\n};\n\nexport const darkTheme = {\n  body: \"#363537\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport MyEditor from \"./components/MyEditor\";\nimport TopBar from \"./components/Topbar\";\nimport BottomBar from \"./components/BottomBar\";\n\n// For Theme\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div\n          className=\"App\"\n          style={{ paddingTop: \"50px\", paddingBottom: \"50px\" }}\n        >\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <TopBar toggle={themeToggler} curTheme={theme} />\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <MyEditor />\n              </Route>\n              <Route path=\"/:id\">\n                <MyEditor />\n              </Route>\n            </Switch>\n            <div>\n              <BottomBar curTheme={theme} />\n            </div>\n          </Router>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}