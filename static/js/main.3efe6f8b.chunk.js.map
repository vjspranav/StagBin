{"version":3,"sources":["components/MyEditor.js","App.js","reportWebVitals.js","index.js"],"names":["MyEditor","id","useParams","useState","convertedText","setConvertedText","theme","value","onChange","style","minHeight","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAoBeA,EAfE,WACf,IAAQC,EAAOC,cAAPD,GACR,EAA0CE,mBAASF,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,OACE,8BACE,cAAC,IAAD,CACEC,MAAM,OACNC,MAAOH,EACPI,SAAUH,EACVI,MAAO,CAAEC,UAAW,cCIbC,MAff,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,SAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,YCCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3efe6f8b.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst MyEditor = () => {\n  const { id } = useParams();\n  const [convertedText, setConvertedText] = useState(id);\n  return (\n    <div>\n      <ReactQuill\n        theme=\"snow\"\n        value={convertedText}\n        onChange={setConvertedText}\n        style={{ minHeight: \"100vh\" }}\n      />\n    </div>\n  );\n};\n\nexport default MyEditor;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MyEditor from \"./components/MyEditor\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <MyEditor />\n        </Route>\n        <Route path=\"/:id\">\n          <MyEditor />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}